here()
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("skimr")
library("here")
library("ggplot2")
here()
setwd(here)
setwd(here())
data_transcript <- read_csv("3-class3/data/input/data_transcript.csv")
rename(data_transcript, hour0 = hour00_rep1)
View(data_transcript)
names(data_transcript)
rename(data_transcript, colnum = X1)
select(data_transcript, hour00_rep1)
select(data_transcript, hour00_rep1:hour14_rep1)
select(data = data_transcript, hgnc_symbol)
View(data_transcript)
data_transcript
select(data = data_transcript, hgnc_symbol)
names(data_transcript)
select(data = data_transcript, hgnc_symbol)
select(data_transcript, hgnc_symbol)
select(data_transcript, -X1)
select(data = data_transcript, ... = hgnc_symbol)
select(data_transcript, starts_with("hour"))
select(data_transcript, starts_with("ensembl"))
select(data_transcript, contains("ensembl"))
select(data_transcript, dux4_target, everything())
rename(data = data_transcript, rownum = X1)
rename(data_transcript, rownum = X1)
select(data_transcript, rownum = X1)
select(data_transcript, rownum = X1, everything())
count(data_transcript, hgnc_symbol)
table(data_transcript$hgnc_symbol)
count(data_transcript, length())
count(data_transcript, length
)
count(data_transcript, Length)
filter(data_transcript, hgnc_symbol == "RPL28")
filter(data_transcript, hour14_rep01 > 1000)
filter(data_transcript, hour14_rep1 > 1000)
filter(data_transcript, hour14_rep1 > 1000 & hour14_rep2 > 1000 | hour00_rep1 < 100)
filter(data_transcript, hour14_rep1 > 1000 & (hour14_rep2 > 1000 | hour00_rep1 < 100))
unique(data_transcript$hgnc_symbol)
data_transcript$hgnc_symbol
distinct(data_transcript, hgnc_symbol)
add_row(data_transcript, hgnc_symbol = "test", Length = "10")
arrange(data_transcript, dux4_target)
head(arrange(data_transcript, dux4_target))
glimpse(arrange(data_transcript, dux4_target))
glimpse(arrange(data_transcript, desc(dux4_target)))
glimpse(arrange(data_transcript, desc(dux4_target, hour14_rep1)))
glimpse(arrange(data_transcript, desc(dux4_target, mean(hour14_rep1, hour14_rep2, hour14_rep3))))
arrange(data_transcript, desc(dux4_target, mean(hour14_rep1, hour14_rep2, hour14_rep3))) %>% select(hgnc_symbol)
arrange(data_transcript, desc(dux4_target, hour14_rep1)) %>% select(hgnc_symbol)
arrange(data_transcript, dux4_target, hour14_rep1)
arrange(data_transcript, dux4_target, desc(hour14_rep1))
count(data_transcript, dux4_target)
count(data_transcript, hgnc_symbol)
count(data_transcript, Length)
select_if(data_transcript, is.numeric)
select_if(data_transcript, is.logical())
select_if(data_transcript, is.numeric())
select_if(data_transcript, is.numeric())
select_if(data_transcript, is.numeric)
select_if(data_transcript, is.logical)
filter(data_transcript, hgnc_symbol %in% c("RPL28", "RPS3"))
mutate(data_transcript, hour14 = mean(hour14_rep1, hour14_rep2, hour14_rep3))
mutate(data_transcript, hour14 = mean(hour14_rep1, hour14_rep2, hour14_rep3, na.rm = T))
mutate(data_transcript, hour14 = mean(hour14_rep1, hour14_rep2, hour14_rep3))
mutate(data_transcript, hour14 = sum(hour14_rep1, hour14_rep2, hour14_rep3))
mutate(data_transcript, hour14 = sum(hour14_rep1, hour14_rep2, hour14_rep3)/3)
mutate_if(data_transcript, is.numeric, funs(log(.)))
mutate_if(data_transcript, is.numeric, list(log(.)))
mutate_if(data_transcript, is.numeric, list(~log(.)))
mutate(data_transcript, hour14 = sum(hour14_rep1, hour14_rep2, hour14_rep3)/3)
glimpse(mutate(data_transcript, hour14 = sum(hour14_rep1, hour14_rep2, hour14_rep3)/3))
glimpse(mutate(data_transcript, hour14 = (sum(hour14_rep1, hour14_rep2, hour14_rep3))/3))
glimpse(mutate(data_transcript, hour14 = (hour14_rep1 + hour14_rep2 + hour14_rep3)/3))
mutate_at(data_transcript, Length, round(.))
mutate_at(data_transcript, vars(Length), list(round(.)))
mutate_at(data_transcript, vars(Length), list(round()))
mutate_at(data_transcript, vars(Length), round())
mutate_at(data_transcript, vars(Length), Length = Length + 1)
names(data_transcript)
mutate_at(data_transcript, vars(X1), X1plus1 = X1 + 1)
mutate_at(data_transcript, X1, X1plus1 = X1 + 1)
data_transcript$X1
data_transcript$X1 +1
data_transcript$X1 + 1
mutate_at(data_transcript, hour00_rep1:hour14_rep3, list(~log(.)))
select(data_transcript, hour00_rep1:hour14_rep3)
mutate_at(data_transcript, hour00_rep1:hour14_rep3, funs(log(.))
)
mutate_at(data_transcript, hour00_rep3, funs(log(.))
)
mutate_at(data_transcript, vars(hour00_rep3), funs(log(.)))
mutate_if(data_transcript, is.numeric, list(~log(.)))
mutate_if(data_transcript, is.numeric, funs(log(.)))
mutate_if(data_transcript, starts_with("hour"), funs(log(.)))
mutate_at(data_transcript, starts_with("hour"), funs(log(.)))
mutate_at(data_transcript, starts_with("hour"), funs(log(.)))
select(data_transcript, starts_with("hour")
)
mutate_at(data_transcript, starts_with("hour"), funs(log(.)))
rlang::last_error()
mutate_at(data_transcript, vars(starts_with("hour")), funs(log(.)))
summarise(data_transcript)
summarise(data_transcript$Length)
summarise(data_transcript$hour00_rep1)
summarise(data_transcript, avg = mean(Length))
group_by(data_transcript, hgnc_symbol)
summarise(data_transcript, Length)
summarise(data_transcript,
)
summarise(data_transcript, Length = mean(Length))
summarise(data_transcript, mean(Length))
summarise(data_transcript, hour00_rep1 = mean(hour00_rep1))
summarise_if(data_transcript, starts_with("hour"), mean())
summarise_if(data_transcript, vars(starts_with("hour")), mean())
summarise_if(data_transcript, vars(starts_with("hour")), mean(.))
summarise_if(data_transcript, vars(starts_with("hour"))
)
summarise_if(data_transcript, is.numeric)
summarise_if(data_transcript, is.numeric, funs(mean(.)))
summary(data_transcript)
group_by(data_transcript, hgnc_symbol) %>% summarise(mean_length = mean(length()))
group_by(data_transcript, hgnc_symbol) %>% summarise(mean_length = mean(Length))
summarise(data_transcript, mean_length = mean(Length))
group_by(data_transcript, hgnc_symbol) %>% summarise_if(is.numeric, funs(mean(.)))
select(data_transcript, hgnc_symbol, ensembl_gene_id)
data2 <- select(data_transcript, -hgnc_symbol, -ensembl_gene_id)
str(data1)
str(data1)
data1 <- select(data_transcript, hgnc_symbol, ensembl_gene_id)
data2 <- select(data_transcript, -hgnc_symbol, -ensembl_gene_id)
str(data)
str(data)
str(data1)
glimpse(data1)
glimpse(data2)
data3 <- bind_cols(data1, data2)
data3
data3 <- cbind(data1, data2)
glimpse(data3)
data3
data1 <- select(data_transcript, hgnc_symbol, ensembl_gene_id)
data2 <- select(data_transcript, -hgnc_symbol)
glimpse(data1)
glimpse(data2)
#looks good!
data3 <- left_join(data1, data2)
data3
data1 <- data1[, c(1:8)]
data1 <- data1[c(1:8),]
glimpse(data1)
data3 <- left_join(data1, data2)
data3
data1 <- select(data_transcript, hgnc_symbol, ensembl_gene_id)
data2 <- select(data_transcript, -hgnc_symbol)
glimpse(data1)
glimpse(data2)
data3 <- left_join(data1, data2)
data3
data1 <- data1[c(1:8), ]
glimpse(data1)
#data 1 now only has 8, instead of 18, observations.
data3 <- left_join(data1, data2)
data3
data3 <- left_join(data1, data2, by = "ensembl_transcript_id")
data1
data1 <- select(data_transcript, hgnc_symbol, ensembl_gene_id, ensembl_transcript_id)
data2 <- select(data_transcript, -hgnc_symbol)
data3 <- left_join(data1, data2)
data3
data3 <- left_join(data1, data2, by = "ensembl_transcript_id")
data3
View(data1)
data1 <- select(data_transcript, hgnc_symbol, ensembl_gene_id, ensembl_transcript_id)
data2 <- select(data_transcript, -hgnc_symbol, -ensembl_gene_id)
data3 <- left_join(data1, data2)
data3
View(data2)
View(data1)
View(data3)
View(data2)
View(data1)
View(data3)
View(data1)
View(data2)
data3 <- left_join(data1, data2, by = "ensembl_transcript_id")
datat3
data3
distinct(data3)
distinct(data3)
data3 <- left_join(data1, data2, by = "ensembl_transcript_id", copy = FALSE)
data3
View(data1)
View(data3)
View(data1)
View(data2)
data1 <- data1[c(1:8),]
data3 <- left_join(data1, data2)
View(data3)
View(data3)
data2 <- data2[c(3:15), ]
data3 <- left_join(data1, data2)
View(data1)
View(data3)
data4 <- right_join(data1, data2)
View(data4)
data5 <- inner_join(data1, data2)
View(data5)
data6 <- full_join(data1, data2)
View(data6)
data1 <- data_transcript[c(1:8), ]
data2 <- data_transcript[c(5:18), ]
data1
data3 <- bind_rows(data1, data2)
View(data3)
data1 <- data_transcript[c(1:8), ]
data2 <- data_transcript[c(8:18), ]
data3 <- bind_rows(data1, data2)
View(data3)
data4 <- intersect(data1, data2)
View(data4)
data5 <- setdiff(data1, data2) # rows that appear in x, but not y
View(data5)
data6 <- setdiff(data2, data1)
View(data6)
data7 <- union(data1, data2)
View(data7)
setequal(data1, data2)
View(data_transcript)
View(data_transcript)
select(data_transcript, -X1)
select(data_transcript, -X1) %>% filter((hour00_rep1 + hour00_rep2 + hour00_rep3) >20)
glimpse(select(data_transcript, -X1) %>% filter((hour00_rep1 + hour00_rep2 + hour00_rep3) >20))
colSums(data_transcript)
colSums(data_transcript$hour00_rep1)
colSums(data_transcript[, c(4:8)])
data_transcript %>% group_by(hgnc_symbol) %>% summarise_if(starts_with("hour"), funs(sum(.)))
data_transcript %>% group_by(hgnc_symbol) %>% summarise_if(starts_with("hour"))
data_transcript %>% group_by(hgnc_symbol) %>% summarise(hour00_rep1 = sum(hour00_rep1))
data_transcript %>% group_by(hgnc_symbol) %>% summarise(vars(hour00_rep1:hour14_rep3), funs(sum()))
data_transcript %>% group_by(hgnc_symbol) %>% summarise(vars(hour00_rep1:hour14_rep3), funs(sum(.)))
